<extraction><id>#1</id><title>Implement message queueing when no connection is available</title><description> 
No description provided.
</description><comments>as discussed on https://plus.google.com/113290547005620146033/posts/1UVBz2m2jfs Thx for the link  @jpmens I need your input on queueing behavior. Pre 0.5.7 will try to publish a message and throw it away if it is not published within 30 seconds (actually, just the publish method has to return within 30 seconds without throwing an error, an actual PUBACK is never checked so the current behavior is meh anyway). With 0.5.7 I'm tweaking the BrokerService to queue messages in memory, therefore I've implemented the following method in pseudocode: The reason I have to implement this, is that the Paho client a) throws an error if the client is not connected during publish and does not store it in it's persistence store and b) it clears the persistence store when the client connects anew. Now there are several questions:
1) When to call deliverBacklog? Currently I'm calling it when the connection is newly established. This might be another broker as the one to which the messages were originally targeted at. 
2) What to do during MARK? 
The publish can throw all kinds of errors, one of them being REASON_CODE_CLIENT_NOT_CONNECTED? Shall I generally ignore publish errors and queue the item no matter what or shall I throw it away on certain ones (full list is at http://www.eclipse.org/paho/files/javadoc/org/eclipse/paho/client/mqttv3/MqttException.html)3) How to handle message order? Shall I likewise queue new messages until the backlog is empty to preserve publish order or don't we care about this?   2) Yes. RETRYCOUNTER is possible and easy. 
3) Keeping order for waypoint events is harder. The service doesn't really now what it publishes. Its just strings and parameters at this level. </comments></extraction>